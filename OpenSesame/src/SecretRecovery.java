
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileWriter;


/*
 * SecretRecovery.java
 *
 * Created on Feb 6, 2009, 8:45:31 PM
 */
public class SecretRecovery extends javax.swing.JFrame {

    /** Creates new form SecretRecovery */
    public SecretRecovery() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fselect = new javax.swing.JFileChooser();
        userMessage = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        enterShares = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        recovKey = new javax.swing.JButton();
        len = new javax.swing.JTextField();
        cols = new javax.swing.JTextField();
        time = new javax.swing.JLabel();

        fselect.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        fselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fselectActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Secret Recovery");

        jPanel1.setBackground(new java.awt.Color(192, 219, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.textHighlight, 3, true));
        jPanel1.setAutoscrolls(true);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture1.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel2.setForeground(java.awt.SystemColor.textHighlight);
        jLabel2.setText("Length of Secret:");

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel3.setForeground(java.awt.SystemColor.textHighlight);
        jLabel3.setText("bits");

        jLabel4.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel4.setForeground(java.awt.SystemColor.textHighlight);
        jLabel4.setText("No. of Columns:");

        enterShares.setText("Enter Shares");
        enterShares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterSharesActionPerformed(evt);
            }
        });

        reset.setText("Back");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        recovKey.setText("Recover  Key");
        recovKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recovKeyActionPerformed(evt);
            }
        });

        len.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lenActionPerformed(evt);
            }
        });
        len.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lenFocusLost(evt);
            }
        });

        cols.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                colsFocusLost(evt);
            }
        });

        time.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        time.setForeground(java.awt.SystemColor.textHighlight);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(len, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cols, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(enterShares)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(recovKey))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(len, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterShares)
                    .addComponent(recovKey)
                    .addComponent(reset))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lenActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_lenActionPerformed

    private void enterSharesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterSharesActionPerformed

        fselect.showDialog(this, "Select Share");
}//GEN-LAST:event_enterSharesActionPerformed

    private void recovKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recovKeyActionPerformed

        long start = System.currentTimeMillis();

        for (int i = 0, block = 0; i < lenShare; i += columns, block++) {
            int temp = 0;
            for (int j = 0; j < columns; ++j) {
                if (store[i + j] == '1') {
                    temp++;
                }
            }
            binWt[block] = temp;
        }

        int max = 0;
        for (int i = 0; i < lenSec; ++i) {
            if (binWt[i] > max) {
                max = binWt[i];
            }
        }

        for (int j = 0; j < lenSec; ++j) {
            if (binWt[j] == max) {
                secretKey[j] = '1';
            } else {
                secretKey[j] = '0';
            }
        }

        convChar();
        //ShareGenerate.printShare(secretKey1,"secretKey.txt");
        try {
            // Create file
            FileWriter fstream = new FileWriter("secretKey.doc");
            BufferedWriter out = new BufferedWriter(fstream);
            
            out.write(secretPrint);
            out.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }
        //}
        long end = System.currentTimeMillis();

        float duration = (end - start) / 1000;
        time.setText("Time Elapsed: " + duration + " s");


    }//GEN-LAST:event_recovKeyActionPerformed

    private void fselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fselectActionPerformed

        long start = System.currentTimeMillis();
        try {
            // Open the file
            FileInputStream fstream = new FileInputStream(fselect.getSelectedFile());

            // Convert our input stream to a
            // DataInputStream
            DataInputStream in = new DataInputStream(fstream);

            // Continue to read lines while
            // there are still some left to read
            while (in.available() != 0) {
                
                in.readFully(share);

            }

            accum(share);
            //System.out.println("till here!");

            in.close();
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            userMessage.showMessageDialog(this, "Values of some fields may be incorrect !!");

        } catch (Exception e) {
            System.err.println("File Input Error " + e);
        }

        long end = System.currentTimeMillis();

        float duration = (end - start) / 1000;
        time.setText("Time Elapsed: " + duration + " s");

    }//GEN-LAST:event_fselectActionPerformed

    private void lenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lenFocusLost
        lenSec = Integer.parseInt(len.getText());
        binWt = new int[lenSec];
        secretKey = new char[lenSec];
        secretPrint = new char[lenSec / 8];
    }//GEN-LAST:event_lenFocusLost

    private void colsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_colsFocusLost
        columns = Integer.parseInt(cols.getText());
        lenShare = lenSec * columns;
        store = new char[lenShare];
        share = new byte[lenShare];

        for (int i = 0; i < lenShare; ++i) {
            store[i] = '0';
        }
    }//GEN-LAST:event_colsFocusLost

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        new LogIn().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_resetActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cols;
    private javax.swing.JButton enterShares;
    private javax.swing.JFileChooser fselect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField len;
    private javax.swing.JButton recovKey;
    private javax.swing.JButton reset;
    private javax.swing.JLabel time;
    private javax.swing.JOptionPane userMessage;
    // End of variables declaration//GEN-END:variables

    //Global Variables
    int lenSec, columns, lenShare;
    int[] binWt;
    char[] store, secretKey, secretPrint;
    byte[] share;

    public void accum(byte[] s) {

        for (int i = 0; i < s.length; i++) {
            if (s[i] == '1' || store[i] == '1') {
                store[i] = '1';
            } else {
                store[i] = '0';
            }
        }
    }

    public void convChar() {


        for (int i = 0; i < secretKey.length; i = i + 8) {

            int temp = 0;
            for (int j = 0; j < 8; ++j) {
                if (secretKey[i + j] == '1') {
                    temp += Math.pow(2, (7 - j));
                }
            }
            char c = (char) temp;
            secretPrint[i / 8] = c;
        }

    }
}
